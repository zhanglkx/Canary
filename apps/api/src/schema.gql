# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String!
  user: User!
}

type Category {
  color: String!
  createdAt: DateTime!
  description: String
  icon: String!
  id: ID!
  name: String!
  todos: [Todo!]
  updatedAt: DateTime!
  user: User!
}

type CategoryStats {
  color: String!
  completedCount: Int!
  icon: String!
  id: ID!
  name: String!
  todoCount: Int!
}

input CreateCategoryInput {
  color: String
  description: String
  icon: String
  name: String!
}

input CreateTodoInput {
  categoryId: ID
  description: String
  dueDate: String
  priority: Priority
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  """创建新分类"""
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createTodo(createTodoInput: CreateTodoInput!): Todo!
  login(loginInput: LoginInput!): AuthResponse!
  register(registerInput: RegisterInput!): AuthResponse!

  """删除分类"""
  removeCategory(id: ID!): Boolean!
  removeTodo(id: ID!): Boolean!

  """更新分类信息"""
  updateCategory(id: ID!, updateCategoryInput: UpdateCategoryInput!): Category!
  updateTodo(id: ID!, updateTodoInput: UpdateTodoInput!): Todo!
}

"""Todo 优先级"""
enum Priority {
  HIGH
  LOW
  MEDIUM
  URGENT
}

type Query {
  """获取用户所有分类"""
  categories: [Category!]!

  """根据ID获取分类详情"""
  category(id: ID!): Category!

  """获取分类统计信息"""
  categoryStats: [CategoryStats!]!
  me: User!
  todo(id: ID!): Todo!
  todos: [Todo!]!
  user(id: ID!): User!
  users: [User!]!
}

input RegisterInput {
  email: String!
  password: String!
  username: String!
}

type Todo {
  category: Category
  completed: Boolean!
  createdAt: DateTime!
  description: String
  dueDate: String
  id: ID!
  priority: Priority!
  title: String!
  updatedAt: DateTime!
  user: User!
}

input UpdateCategoryInput {
  color: String
  description: String
  icon: String
  name: String
}

input UpdateTodoInput {
  categoryId: ID
  completed: Boolean
  description: String
  dueDate: String
  priority: Priority
  title: String
}

type User {
  categories: [Category!]
  createdAt: DateTime!
  email: String!
  id: ID!
  todos: [Todo!]
  updatedAt: DateTime!
  username: String!
}